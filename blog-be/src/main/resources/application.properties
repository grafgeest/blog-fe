server.port = 8090
spring.datasource.url = jdbc:mysql://localhost:3306/blog?useSSL=false
spring.datasource.username = root
spring.datasource.password = root
spring.jpa.hibernate.ddl-auto = update
# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://aa11ra6sn2m7aal.cbx7njyoa3nu.us-east-2.rds.amazonaws.com:3306/blog?useSSL=false
#spring.datasource.password = root-aws
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true

#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.type=trace

# Hibernate ddl auto (create, create-drop, update)

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#management.security.enabled=false
#spring.jpa.hibernate.ddl-auto=none
#spring.h2.console.enabled=true

#liquibase.change-log=classpath:liquibase/liquibase-changeLog.xml
